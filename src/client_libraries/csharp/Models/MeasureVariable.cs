// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a variable (computed column) in a measure
    /// </summary>
    public partial class MeasureVariable
    {
        /// <summary>
        /// Initializes a new instance of the MeasureVariable class.
        /// </summary>
        public MeasureVariable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MeasureVariable class.
        /// </summary>
        /// <param name="kind">Possible values include: 'arithmetic',
        /// 'date'</param>
        /// <param name="name">Gets the name of the variable</param>
        /// <param name="dataType">Gets the data type of the variable</param>
        /// <param name="expressionText">Gets the expression text for computing
        /// the variable</param>
        /// <param name="variableConditionGroups">Gets the variable
        /// conditions</param>
        public MeasureVariable(string kind = default(string), string name = default(string), string dataType = default(string), string expressionText = default(string), IList<MeasureVariableConditionGroup> variableConditionGroups = default(IList<MeasureVariableConditionGroup>))
        {
            Kind = kind;
            Name = name;
            DataType = dataType;
            ExpressionText = expressionText;
            VariableConditionGroups = variableConditionGroups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'arithmetic', 'date'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets the name of the variable
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets the data type of the variable
        /// </summary>
        [JsonProperty(PropertyName = "dataType")]
        public string DataType { get; set; }

        /// <summary>
        /// Gets the expression text for computing the variable
        /// </summary>
        [JsonProperty(PropertyName = "expressionText")]
        public string ExpressionText { get; set; }

        /// <summary>
        /// Gets the variable conditions
        /// </summary>
        [JsonProperty(PropertyName = "variableConditionGroups")]
        public IList<MeasureVariableConditionGroup> VariableConditionGroups { get; set; }

    }
}
