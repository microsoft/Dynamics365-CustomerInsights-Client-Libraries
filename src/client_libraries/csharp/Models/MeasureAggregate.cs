// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents an aggregate
    /// </summary>
    public partial class MeasureAggregate
    {
        /// <summary>
        /// Initializes a new instance of the MeasureAggregate class.
        /// </summary>
        public MeasureAggregate()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MeasureAggregate class.
        /// </summary>
        /// <param name="operation">Possible values include: 'sum', 'avg',
        /// 'min', 'max', 'count', 'countDistinct', 'first', 'last', 'argMax',
        /// 'argMin'</param>
        /// <param name="field">Gets the field on which the aggregate operation
        /// is applied</param>
        /// <param name="alias">Gets the alias for the field</param>
        /// <param name="displayName">Gets the display name for the
        /// aggregate</param>
        /// <param name="order">Gets the order for the aggregate</param>
        /// <param name="aggregates">Gets list of aggregates of the
        /// measure.</param>
        /// <param name="isIncluded">Gets a value indicating whether to display
        /// the field in results</param>
        public MeasureAggregate(string operation = default(string), string field = default(string), string alias = default(string), string displayName = default(string), int? order = default(int?), IList<MeasureAggregate> aggregates = default(IList<MeasureAggregate>), bool? isIncluded = default(bool?))
        {
            Operation = operation;
            Field = field;
            Alias = alias;
            DisplayName = displayName;
            Order = order;
            Aggregates = aggregates;
            IsIncluded = isIncluded;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'sum', 'avg', 'min', 'max',
        /// 'count', 'countDistinct', 'first', 'last', 'argMax', 'argMin'
        /// </summary>
        [JsonProperty(PropertyName = "operation")]
        public string Operation { get; set; }

        /// <summary>
        /// Gets the field on which the aggregate operation is applied
        /// </summary>
        [JsonProperty(PropertyName = "field")]
        public string Field { get; set; }

        /// <summary>
        /// Gets the alias for the field
        /// </summary>
        [JsonProperty(PropertyName = "alias")]
        public string Alias { get; set; }

        /// <summary>
        /// Gets the display name for the aggregate
        /// </summary>
        [JsonProperty(PropertyName = "displayName")]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets the order for the aggregate
        /// </summary>
        [JsonProperty(PropertyName = "order")]
        public int? Order { get; set; }

        /// <summary>
        /// Gets list of aggregates of the measure.
        /// </summary>
        [JsonProperty(PropertyName = "aggregates")]
        public IList<MeasureAggregate> Aggregates { get; set; }

        /// <summary>
        /// Gets a value indicating whether to display the field in results
        /// </summary>
        [JsonProperty(PropertyName = "isIncluded")]
        public bool? IsIncluded { get; set; }

    }
}
