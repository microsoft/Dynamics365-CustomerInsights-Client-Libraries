// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ProfileStoreCollectionInfo
    {
        /// <summary>
        /// Initializes a new instance of the ProfileStoreCollectionInfo class.
        /// </summary>
        public ProfileStoreCollectionInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ProfileStoreCollectionInfo class.
        /// </summary>
        /// <param name="currentState">Possible values include: 'empty',
        /// 'inBuild', 'queryable'</param>
        /// <param name="rowCount">Gets the row count of customer file yielded
        /// from merge output.</param>
        /// <param name="size">Gets the size of customer file yielded from
        /// merge .</param>
        /// <param name="profileStoreHydrationStateInfo">Gets the state of
        /// profile store hydration per job type.</param>
        public ProfileStoreCollectionInfo(string currentState = default(string), long? rowCount = default(long?), long? size = default(long?), IDictionary<string, string> profileStoreHydrationStateInfo = default(IDictionary<string, string>))
        {
            CurrentState = currentState;
            RowCount = rowCount;
            Size = size;
            ProfileStoreHydrationStateInfo = profileStoreHydrationStateInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'empty', 'inBuild',
        /// 'queryable'
        /// </summary>
        [JsonProperty(PropertyName = "currentState")]
        public string CurrentState { get; set; }

        /// <summary>
        /// Gets the row count of customer file yielded from merge output.
        /// </summary>
        [JsonProperty(PropertyName = "rowCount")]
        public long? RowCount { get; set; }

        /// <summary>
        /// Gets the size of customer file yielded from merge .
        /// </summary>
        [JsonProperty(PropertyName = "size")]
        public long? Size { get; set; }

        /// <summary>
        /// Gets the state of profile store hydration per job type.
        /// </summary>
        [JsonProperty(PropertyName = "profileStoreHydrationStateInfo")]
        public IDictionary<string, string> ProfileStoreHydrationStateInfo { get; set; }

    }
}
