// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Represents a Relationship
    /// </summary>
    public partial class RelationshipMetadata
    {
        /// <summary>
        /// Initializes a new instance of the RelationshipMetadata class.
        /// </summary>
        public RelationshipMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RelationshipMetadata class.
        /// </summary>
        /// <param name="friendlyName">Gets the friendly name of the
        /// relationship.</param>
        /// <param name="name">Gets the unique name for relationship</param>
        /// <param name="description">Gets the description for
        /// relationship</param>
        /// <param name="relationshipType">Possible values include:
        /// 'singleKeyRelationshipOrigin', 'singleKeyRelationshipDestination',
        /// 'dataSourceLineageOrigin', 'dataSourceLineageDestination'</param>
        /// <param name="fromAttributeName">Gets the name of the foreign key
        /// reference attribute that this relationship originates from.</param>
        /// <param name="fromEntityName">Gets the name of the entity this
        /// relationship originates from.</param>
        /// <param name="toAttributeName">Gets the name of the foreign key
        /// attribute that this relationship points to.</param>
        /// <param name="toEntityName">Gets the name of the entity this
        /// relationship points to.</param>
        /// <param name="cardinality">Possible values include: 'oneToMany',
        /// 'oneToOne', 'manyToOne'</param>
        /// <param name="source">Possible values include: 'user', 'system',
        /// 'inferred'</param>
        /// <param name="version">Version number of this object.</param>
        /// <param name="updatedBy">UPN of the user who last updated this
        /// record.</param>
        /// <param name="updatedUtc">Time this object was last updated.</param>
        /// <param name="createdBy">Email address of the user who created this
        /// record.</param>
        /// <param name="createdUtc">Time this object was initially
        /// created.</param>
        /// <param name="instanceId">Customer Insights instance id associated
        /// with this object.</param>
        public RelationshipMetadata(string friendlyName = default(string), string name = default(string), string description = default(string), string relationshipType = default(string), string fromAttributeName = default(string), string fromEntityName = default(string), string toAttributeName = default(string), string toEntityName = default(string), string cardinality = default(string), string source = default(string), long? version = default(long?), string updatedBy = default(string), System.DateTime? updatedUtc = default(System.DateTime?), string createdBy = default(string), System.DateTime? createdUtc = default(System.DateTime?), System.Guid? instanceId = default(System.Guid?))
        {
            FriendlyName = friendlyName;
            Name = name;
            Description = description;
            RelationshipType = relationshipType;
            FromAttributeName = fromAttributeName;
            FromEntityName = fromEntityName;
            ToAttributeName = toAttributeName;
            ToEntityName = toEntityName;
            Cardinality = cardinality;
            Source = source;
            Version = version;
            UpdatedBy = updatedBy;
            UpdatedUtc = updatedUtc;
            CreatedBy = createdBy;
            CreatedUtc = createdUtc;
            InstanceId = instanceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the friendly name of the relationship.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets the unique name for relationship
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets the description for relationship
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets possible values include:
        /// 'singleKeyRelationshipOrigin', 'singleKeyRelationshipDestination',
        /// 'dataSourceLineageOrigin', 'dataSourceLineageDestination'
        /// </summary>
        [JsonProperty(PropertyName = "relationshipType")]
        public string RelationshipType { get; set; }

        /// <summary>
        /// Gets the name of the foreign key reference attribute that this
        /// relationship originates from.
        /// </summary>
        [JsonProperty(PropertyName = "fromAttributeName")]
        public string FromAttributeName { get; set; }

        /// <summary>
        /// Gets the name of the entity this relationship originates from.
        /// </summary>
        [JsonProperty(PropertyName = "fromEntityName")]
        public string FromEntityName { get; set; }

        /// <summary>
        /// Gets the name of the foreign key attribute that this relationship
        /// points to.
        /// </summary>
        [JsonProperty(PropertyName = "toAttributeName")]
        public string ToAttributeName { get; set; }

        /// <summary>
        /// Gets the name of the entity this relationship points to.
        /// </summary>
        [JsonProperty(PropertyName = "toEntityName")]
        public string ToEntityName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'oneToMany', 'oneToOne',
        /// 'manyToOne'
        /// </summary>
        [JsonProperty(PropertyName = "cardinality")]
        public string Cardinality { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'user', 'system', 'inferred'
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets or sets version number of this object.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public long? Version { get; set; }

        /// <summary>
        /// Gets or sets UPN of the user who last updated this record.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was last updated.
        /// </summary>
        [JsonProperty(PropertyName = "updatedUtc")]
        public System.DateTime? UpdatedUtc { get; set; }

        /// <summary>
        /// Gets or sets email address of the user who created this record.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was initially created.
        /// </summary>
        [JsonProperty(PropertyName = "createdUtc")]
        public System.DateTime? CreatedUtc { get; set; }

        /// <summary>
        /// Gets or sets customer Insights instance id associated with this
        /// object.
        /// </summary>
        [JsonProperty(PropertyName = "instanceId")]
        public System.Guid? InstanceId { get; set; }

    }
}
