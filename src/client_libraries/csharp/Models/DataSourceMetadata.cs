// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents metadata for a Customer Insights data source.
    /// </summary>
    public partial class DataSourceMetadata
    {
        /// <summary>
        /// Initializes a new instance of the DataSourceMetadata class.
        /// </summary>
        public DataSourceMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataSourceMetadata class.
        /// </summary>
        /// <param name="kind">Possible values include: 'salesforce',
        /// 'dynamics365', 'powerQuery', 'attachCdm', 'attachSynapse',
        /// 'attachCds', 'powerPlatform', 'datahub', 'firstParty'</param>
        /// <param name="isActive">Represents if still in active state</param>
        /// <param name="entityNames">List of all Entity Names</param>
        /// <param name="dataSourceId">Unique identity for this object.</param>
        /// <param name="name">Unique name of the dataSource.</param>
        /// <param name="friendlyName">FriendlyName of the dataSource.</param>
        /// <param name="entityInformation">Entity information, by entity
        /// name.</param>
        /// <param name="provisioningState">Possible values include: 'new',
        /// 'creating', 'active', 'createFailed', 'updateFailed', 'deleting',
        /// 'refreshCredentials', 'resetInstanceInProgress', 'updating',
        /// 'quickUpdate', 'deactivated'</param>
        /// <param name="lastRefresh">Represents the time datasource was last
        /// refreshed.</param>
        /// <param name="refreshState">Possible values include: 'notUpdated',
        /// 'updated', 'updating', 'updateFailed', 'updateCancelled'</param>
        /// <param name="incrementalRefreshProperties">Incremental refresh
        /// properties for entities.</param>
        /// <param name="modelJsonPath">Model path for CDM data source.</param>
        /// <param name="version">Version number of this object.</param>
        /// <param name="updatedBy">UPN of the user who last updated this
        /// record.</param>
        /// <param name="updatedUtc">Time this object was last updated.</param>
        /// <param name="createdBy">Email address of the user who created this
        /// record.</param>
        /// <param name="createdUtc">Time this object was initially
        /// created.</param>
        /// <param name="instanceId">Customer Insights instance id associated
        /// with this object.</param>
        public DataSourceMetadata(string kind = default(string), bool? isActive = default(bool?), IList<string> entityNames = default(IList<string>), int? entitiesCount = default(int?), System.Guid? dataSourceId = default(System.Guid?), string name = default(string), string friendlyName = default(string), IList<DatasourceEntityInformation> entityInformation = default(IList<DatasourceEntityInformation>), string provisioningState = default(string), System.DateTime? lastRefresh = default(System.DateTime?), string refreshState = default(string), IList<IncrementalRefreshProperties> incrementalRefreshProperties = default(IList<IncrementalRefreshProperties>), string modelJsonPath = default(string), long? version = default(long?), string updatedBy = default(string), System.DateTime? updatedUtc = default(System.DateTime?), string createdBy = default(string), System.DateTime? createdUtc = default(System.DateTime?), System.Guid? instanceId = default(System.Guid?))
        {
            Kind = kind;
            IsActive = isActive;
            EntityNames = entityNames;
            EntitiesCount = entitiesCount;
            DataSourceId = dataSourceId;
            Name = name;
            FriendlyName = friendlyName;
            EntityInformation = entityInformation;
            ProvisioningState = provisioningState;
            LastRefresh = lastRefresh;
            RefreshState = refreshState;
            IncrementalRefreshProperties = incrementalRefreshProperties;
            ModelJsonPath = modelJsonPath;
            Version = version;
            UpdatedBy = updatedBy;
            UpdatedUtc = updatedUtc;
            CreatedBy = createdBy;
            CreatedUtc = createdUtc;
            InstanceId = instanceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'salesforce', 'dynamics365',
        /// 'powerQuery', 'attachCdm', 'attachSynapse', 'attachCds',
        /// 'powerPlatform', 'datahub', 'firstParty'
        /// </summary>
        [JsonProperty(PropertyName = "kind")]
        public string Kind { get; set; }

        /// <summary>
        /// Gets or sets represents if still in active state
        /// </summary>
        [JsonProperty(PropertyName = "isActive")]
        public bool? IsActive { get; set; }

        /// <summary>
        /// Gets or sets list of all Entity Names
        /// </summary>
        [JsonProperty(PropertyName = "entityNames")]
        public IList<string> EntityNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entitiesCount")]
        public int? EntitiesCount { get; set; }

        /// <summary>
        /// Gets or sets unique identity for this object.
        /// </summary>
        [JsonProperty(PropertyName = "dataSourceId")]
        public System.Guid? DataSourceId { get; set; }

        /// <summary>
        /// Gets or sets unique name of the dataSource.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets friendlyName of the dataSource.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets or sets entity information, by entity name.
        /// </summary>
        [JsonProperty(PropertyName = "entityInformation")]
        public IList<DatasourceEntityInformation> EntityInformation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'new', 'creating', 'active',
        /// 'createFailed', 'updateFailed', 'deleting', 'refreshCredentials',
        /// 'resetInstanceInProgress', 'updating', 'quickUpdate', 'deactivated'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// Gets or sets represents the time datasource was last refreshed.
        /// </summary>
        [JsonProperty(PropertyName = "lastRefresh")]
        public System.DateTime? LastRefresh { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'notUpdated', 'updated',
        /// 'updating', 'updateFailed', 'updateCancelled'
        /// </summary>
        [JsonProperty(PropertyName = "refreshState")]
        public string RefreshState { get; set; }

        /// <summary>
        /// Gets or sets incremental refresh properties for entities.
        /// </summary>
        [JsonProperty(PropertyName = "incrementalRefreshProperties")]
        public IList<IncrementalRefreshProperties> IncrementalRefreshProperties { get; set; }

        /// <summary>
        /// Gets or sets model path for CDM data source.
        /// </summary>
        [JsonProperty(PropertyName = "modelJsonPath")]
        public string ModelJsonPath { get; set; }

        /// <summary>
        /// Gets or sets version number of this object.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public long? Version { get; set; }

        /// <summary>
        /// Gets or sets UPN of the user who last updated this record.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was last updated.
        /// </summary>
        [JsonProperty(PropertyName = "updatedUtc")]
        public System.DateTime? UpdatedUtc { get; set; }

        /// <summary>
        /// Gets or sets email address of the user who created this record.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was initially created.
        /// </summary>
        [JsonProperty(PropertyName = "createdUtc")]
        public System.DateTime? CreatedUtc { get; set; }

        /// <summary>
        /// Gets or sets customer Insights instance id associated with this
        /// object.
        /// </summary>
        [JsonProperty(PropertyName = "instanceId")]
        public System.Guid? InstanceId { get; set; }

    }
}
