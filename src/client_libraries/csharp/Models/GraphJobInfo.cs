// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class GraphJobInfo
    {
        /// <summary>
        /// Initializes a new instance of the GraphJobInfo class.
        /// </summary>
        public GraphJobInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GraphJobInfo class.
        /// </summary>
        /// <param name="jobType">Possible values include: 'full',
        /// 'incremental'</param>
        /// <param name="jobSubmissionKind">Possible values include:
        /// 'onDemand', 'scheduled'</param>
        /// <param name="jobStatus">Possible values include: 'queued',
        /// 'needsUpdate', 'running', 'failed', 'timedOut', 'aborted',
        /// 'deleted', 'successful', 'skipped'</param>
        /// <param name="operationType">Possible values include: 'none',
        /// 'ingestion', 'derivedEntity', 'hierarchy', 'dataPreparation',
        /// 'map', 'realtimeM3Search', 'match', 'merge', 'profileStore',
        /// 'search', 'activity', 'contact', 'attributeMeasures',
        /// 'entityMeasures', 'measures', 'segmentation', 'segmentMembership',
        /// 'enrichment', 'preEnrichment', 'transform', 'intelligence',
        /// 'aiBuilder', 'insights', 'export', 'modelManagement',
        /// 'relationship', 'roleAssignment', 'analysis', 'semanticEntity',
        /// 'all'</param>
        /// <param name="subType">Possible values include: 'noSubType',
        /// 'templatedMeasures', 'createAnalysisModel', 'linkAnalysisModel',
        /// 'singleActivityMapping', 'powerPlatform'</param>
        public GraphJobInfo(System.Guid? jobId = default(System.Guid?), string jobType = default(string), string jobSubmissionKind = default(string), string jobStatus = default(string), string operationType = default(string), string subType = default(string), System.DateTime? endTimestamp = default(System.DateTime?), bool? shouldForceRunRequestedNodes = default(bool?), IList<GraphTaskInfo> tasks = default(IList<GraphTaskInfo>), IList<string> idList = default(IList<string>), GraphJobOptions options = default(GraphJobOptions), System.DateTime? submittedTimestamp = default(System.DateTime?))
        {
            JobId = jobId;
            JobType = jobType;
            JobSubmissionKind = jobSubmissionKind;
            JobStatus = jobStatus;
            OperationType = operationType;
            SubType = subType;
            EndTimestamp = endTimestamp;
            ShouldForceRunRequestedNodes = shouldForceRunRequestedNodes;
            Tasks = tasks;
            IdList = idList;
            Options = options;
            SubmittedTimestamp = submittedTimestamp;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jobId")]
        public System.Guid? JobId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'full', 'incremental'
        /// </summary>
        [JsonProperty(PropertyName = "jobType")]
        public string JobType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'onDemand', 'scheduled'
        /// </summary>
        [JsonProperty(PropertyName = "jobSubmissionKind")]
        public string JobSubmissionKind { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'queued', 'needsUpdate',
        /// 'running', 'failed', 'timedOut', 'aborted', 'deleted',
        /// 'successful', 'skipped'
        /// </summary>
        [JsonProperty(PropertyName = "jobStatus")]
        public string JobStatus { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'none', 'ingestion',
        /// 'derivedEntity', 'hierarchy', 'dataPreparation', 'map',
        /// 'realtimeM3Search', 'match', 'merge', 'profileStore', 'search',
        /// 'activity', 'contact', 'attributeMeasures', 'entityMeasures',
        /// 'measures', 'segmentation', 'segmentMembership', 'enrichment',
        /// 'preEnrichment', 'transform', 'intelligence', 'aiBuilder',
        /// 'insights', 'export', 'modelManagement', 'relationship',
        /// 'roleAssignment', 'analysis', 'semanticEntity', 'all'
        /// </summary>
        [JsonProperty(PropertyName = "operationType")]
        public string OperationType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'noSubType',
        /// 'templatedMeasures', 'createAnalysisModel', 'linkAnalysisModel',
        /// 'singleActivityMapping', 'powerPlatform'
        /// </summary>
        [JsonProperty(PropertyName = "subType")]
        public string SubType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTimestamp")]
        public System.DateTime? EndTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shouldForceRunRequestedNodes")]
        public bool? ShouldForceRunRequestedNodes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tasks")]
        public IList<GraphTaskInfo> Tasks { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "idList")]
        public IList<string> IdList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "options")]
        public GraphJobOptions Options { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "submittedTimestamp")]
        public System.DateTime? SubmittedTimestamp { get; set; }

    }
}
