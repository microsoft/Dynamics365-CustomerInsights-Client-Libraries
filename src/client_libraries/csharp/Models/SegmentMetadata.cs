// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represents a Segment Metadata.
    /// </summary>
    public partial class SegmentMetadata
    {
        /// <summary>
        /// Initializes a new instance of the SegmentMetadata class.
        /// </summary>
        public SegmentMetadata()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SegmentMetadata class.
        /// </summary>
        /// <param name="name">Gets the unique name of the segment</param>
        /// <param name="friendlyName">Gets the friendlyName of the
        /// segment.</param>
        /// <param name="description">Gets the description of the
        /// segment.</param>
        /// <param name="state">Possible values include: 'inactive', 'active',
        /// 'validating', 'validated', 'invalid', 'validationError'</param>
        /// <param name="errorDescription">Gets the error description when the
        /// segment metadata has some issues after refresh.</param>
        /// <param name="endDate">Gets the end date of the segment.</param>
        /// <param name="evaluationStatusHistory">Gets the segment evaluation
        /// status history. (not persisted in store)</param>
        /// <param name="version">Version number of this object.</param>
        /// <param name="updatedBy">UPN of the user who last updated this
        /// record.</param>
        /// <param name="updatedUtc">Time this object was last updated.</param>
        /// <param name="createdBy">Email address of the user who created this
        /// record.</param>
        /// <param name="createdUtc">Time this object was initially
        /// created.</param>
        /// <param name="instanceId">Customer Insights instance id associated
        /// with this object.</param>
        public SegmentMetadata(string name = default(string), string friendlyName = default(string), string description = default(string), SegmentationQuery segmentQueryExpression = default(SegmentationQuery), string state = default(string), string errorDescription = default(string), System.DateTime? endDate = default(System.DateTime?), SegmentationPublishStats evaluationStatus = default(SegmentationPublishStats), SqlValidationStats sqlValidationStats = default(SqlValidationStats), IList<HistoricalSegmentStats> evaluationStatusHistory = default(IList<HistoricalSegmentStats>), long? version = default(long?), string updatedBy = default(string), System.DateTime? updatedUtc = default(System.DateTime?), string createdBy = default(string), System.DateTime? createdUtc = default(System.DateTime?), System.Guid? instanceId = default(System.Guid?))
        {
            Name = name;
            FriendlyName = friendlyName;
            Description = description;
            SegmentQueryExpression = segmentQueryExpression;
            State = state;
            ErrorDescription = errorDescription;
            EndDate = endDate;
            EvaluationStatus = evaluationStatus;
            SqlValidationStats = sqlValidationStats;
            EvaluationStatusHistory = evaluationStatusHistory;
            Version = version;
            UpdatedBy = updatedBy;
            UpdatedUtc = updatedUtc;
            CreatedBy = createdBy;
            CreatedUtc = createdUtc;
            InstanceId = instanceId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the unique name of the segment
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets the friendlyName of the segment.
        /// </summary>
        [JsonProperty(PropertyName = "friendlyName")]
        public string FriendlyName { get; set; }

        /// <summary>
        /// Gets the description of the segment.
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "segmentQueryExpression")]
        public SegmentationQuery SegmentQueryExpression { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'inactive', 'active',
        /// 'validating', 'validated', 'invalid', 'validationError'
        /// </summary>
        [JsonProperty(PropertyName = "state")]
        public string State { get; set; }

        /// <summary>
        /// Gets the error description when the segment metadata has some
        /// issues after refresh.
        /// </summary>
        [JsonProperty(PropertyName = "errorDescription")]
        public string ErrorDescription { get; set; }

        /// <summary>
        /// Gets the end date of the segment.
        /// </summary>
        [JsonProperty(PropertyName = "endDate")]
        public System.DateTime? EndDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "evaluationStatus")]
        public SegmentationPublishStats EvaluationStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sqlValidationStats")]
        public SqlValidationStats SqlValidationStats { get; set; }

        /// <summary>
        /// Gets the segment evaluation status history. (not persisted in
        /// store)
        /// </summary>
        [JsonProperty(PropertyName = "evaluationStatusHistory")]
        public IList<HistoricalSegmentStats> EvaluationStatusHistory { get; set; }

        /// <summary>
        /// Gets or sets version number of this object.
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public long? Version { get; set; }

        /// <summary>
        /// Gets or sets UPN of the user who last updated this record.
        /// </summary>
        [JsonProperty(PropertyName = "updatedBy")]
        public string UpdatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was last updated.
        /// </summary>
        [JsonProperty(PropertyName = "updatedUtc")]
        public System.DateTime? UpdatedUtc { get; set; }

        /// <summary>
        /// Gets or sets email address of the user who created this record.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public string CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets time this object was initially created.
        /// </summary>
        [JsonProperty(PropertyName = "createdUtc")]
        public System.DateTime? CreatedUtc { get; set; }

        /// <summary>
        /// Gets or sets customer Insights instance id associated with this
        /// object.
        /// </summary>
        [JsonProperty(PropertyName = "instanceId")]
        public System.Guid? InstanceId { get; set; }

    }
}
