// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Dynamics.CustomerInsights.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Represent a Segment Query.
    /// </summary>
    public partial class SegmentMembershipCriteria
    {
        /// <summary>
        /// Initializes a new instance of the SegmentMembershipCriteria class.
        /// </summary>
        public SegmentMembershipCriteria()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SegmentMembershipCriteria class.
        /// </summary>
        /// <param name="logicalOperator">Possible values include: 'and',
        /// 'or'</param>
        /// <param name="attribute">Gets the Attribute of the entity used in
        /// segment criteria.</param>
        /// <param name="comparisonOperator">Possible values include: 'equals',
        /// 'notEquals', 'greaterThan', 'greaterThanOrEqualTo', 'lessThan',
        /// 'lessThanOrEqualTo', 'any', 'contains', 'startsWith', 'endsWith',
        /// 'isNull', 'isNotNull', 'all', 'isIn', 'isWithinLast', 'isBetween',
        /// 'isNotBetween', 'yearToDate', 'dayOf', 'monthOf', 'yearOf',
        /// 'dayOfWeek', 'timeAt'</param>
        /// <param name="childCriterias">Gets the list of Child criteria of
        /// segment.</param>
        /// <param name="value">Gets the Value in criteria.</param>
        /// <param name="ignoreCase">Gets a value indicating whether case is
        /// ignored for this criteria.</param>
        /// <param name="listOfValues">Gets the list of values in
        /// criteria.</param>
        /// <param name="isTime">flag set to true if entries are of time
        /// format</param>
        public SegmentMembershipCriteria(string logicalOperator = default(string), string attribute = default(string), string comparisonOperator = default(string), IList<SegmentMembershipCriteria> childCriterias = default(IList<SegmentMembershipCriteria>), string value = default(string), bool? ignoreCase = default(bool?), IList<string> listOfValues = default(IList<string>), bool? isTime = default(bool?))
        {
            LogicalOperator = logicalOperator;
            Attribute = attribute;
            ComparisonOperator = comparisonOperator;
            ChildCriterias = childCriterias;
            Value = value;
            IgnoreCase = ignoreCase;
            ListOfValues = listOfValues;
            IsTime = isTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'and', 'or'
        /// </summary>
        [JsonProperty(PropertyName = "logicalOperator")]
        public string LogicalOperator { get; set; }

        /// <summary>
        /// Gets the Attribute of the entity used in segment criteria.
        /// </summary>
        [JsonProperty(PropertyName = "attribute")]
        public string Attribute { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'equals', 'notEquals',
        /// 'greaterThan', 'greaterThanOrEqualTo', 'lessThan',
        /// 'lessThanOrEqualTo', 'any', 'contains', 'startsWith', 'endsWith',
        /// 'isNull', 'isNotNull', 'all', 'isIn', 'isWithinLast', 'isBetween',
        /// 'isNotBetween', 'yearToDate', 'dayOf', 'monthOf', 'yearOf',
        /// 'dayOfWeek', 'timeAt'
        /// </summary>
        [JsonProperty(PropertyName = "comparisonOperator")]
        public string ComparisonOperator { get; set; }

        /// <summary>
        /// Gets the list of Child criteria of segment.
        /// </summary>
        [JsonProperty(PropertyName = "childCriterias")]
        public IList<SegmentMembershipCriteria> ChildCriterias { get; set; }

        /// <summary>
        /// Gets the Value in criteria.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

        /// <summary>
        /// Gets a value indicating whether case is ignored for this criteria.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreCase")]
        public bool? IgnoreCase { get; set; }

        /// <summary>
        /// Gets the list of values in criteria.
        /// </summary>
        [JsonProperty(PropertyName = "listOfValues")]
        public IList<string> ListOfValues { get; set; }

        /// <summary>
        /// Gets or sets flag set to true if entries are of time format
        /// </summary>
        [JsonProperty(PropertyName = "isTime")]
        public bool? IsTime { get; set; }

    }
}
