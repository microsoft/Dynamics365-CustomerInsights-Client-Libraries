/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a InstanceCreationRequest.
 */
class InstanceCreationRequest {
  /**
   * Create a InstanceCreationRequest.
   * @property {object} [instanceMetadata]
   * @property {string} [instanceMetadata.name] Gets the user defined instance
   * name.
   * @property {string} [instanceMetadata.provisioningState] Possible values
   * include: 'new', 'creating', 'active', 'createFailed', 'updateFailed',
   * 'deleting', 'refreshCredentials', 'resetInstanceInProgress', 'updating',
   * 'quickUpdate', 'deactivated'
   * @property {string} [instanceMetadata.instanceType] Possible values
   * include: 'trial', 'sandbox', 'production', 'pitchDemo', 'pov'
   * @property {object} [instanceMetadata.refreshSchedule]
   * @property {boolean} [instanceMetadata.refreshSchedule.isActive] Gets a
   * value indicating whether the schedule is active.
   * @property {string} [instanceMetadata.refreshSchedule.timezoneId] Gets the
   * ID of the timezone
   * @property {array} [instanceMetadata.refreshSchedule.cronSchedules] Gets
   * the schedule in CRON format
   * @property {uuid} [instanceMetadata.refreshSchedule.scheduleId] Gets the ID
   * of the schedule
   * @property {uuid} [instanceMetadata.refreshSchedule.instanceId] Customer
   * Insights instance id associated with this object.
   * @property {date} [instanceMetadata.expiryTimeUtc] Gets the time the
   * instance is set to expire.
   * @property {string} [instanceMetadata.region] Gets the Azure region where
   * the instance lives.
   * @property {object} [instanceMetadata.cdsOrgInfo]
   * @property {string} [instanceMetadata.cdsOrgInfo.friendlyName] Gets the Cds
   * Organization Friendly Name
   * @property {string} [instanceMetadata.cdsOrgInfo.url] Gets the Cds
   * Organization Url
   * @property {string} [instanceMetadata.cdsOrgInfo.state] Gets the Cds
   * Organization State
   * @property {string} [instanceMetadata.cdsOrgInfo.location] Gets region
   * location of Cds Organization
   * @property {string} [instanceMetadata.cdsOrgInfo.environmentSku] Gets SKU
   * of Cds Organization
   * @property {date} [instanceMetadata.cdsOrgInfo.expirationTime] Gets the
   * expiration time of CDS Organization if the SKU is Trial
   * @property {date} [instanceMetadata.cdsOrgInfo.maxAllowedExpirationTime]
   * Gets the max allowed expiration time of CDS Organization if the SKU is
   * Trial
   * @property {object} [instanceMetadata.cdsMdlInfo]
   * @property {object} [instanceMetadata.cdsMdlInfo.privateWorkSpace]
   * @property {string} [instanceMetadata.cdsMdlInfo.privateWorkSpace.name]
   * Gets the datalake folder Friendly Name
   * @property {string}
   * [instanceMetadata.cdsMdlInfo.privateWorkSpace.uniqueName] Gets the Cds
   * datalake folder unique Name
   * @property {object} [instanceMetadata.cdsMdlInfo.publicWorkSpace]
   * @property {string} [instanceMetadata.cdsMdlInfo.publicWorkSpace.name] Gets
   * the datalake folder Friendly Name
   * @property {string}
   * [instanceMetadata.cdsMdlInfo.publicWorkSpace.uniqueName] Gets the Cds
   * datalake folder unique Name
   * @property {number} [instanceMetadata.maxTrialExtensionsAllowed] Gets the
   * total number of extensions allowed if this is trial instance
   * @property {string} [instanceMetadata.trialExtensionHistory] Stores the
   * details of trial extensions done if this is a trial instance
   * @property {boolean} [instanceMetadata.isRefreshCredentialRequired] Gets a
   * value indicating if credential  is required to refresh any of the
   * datasources
   * @property {array} [instanceMetadata.trialExtensionDetails] Stores the
   * details of trial extensions done if this is a trial instance
   * @property {number} [instanceMetadata.version] Version number of this
   * object.
   * @property {string} [instanceMetadata.updatedBy] UPN of the user who last
   * updated this record.
   * @property {date} [instanceMetadata.updatedUtc] Time this object was last
   * updated.
   * @property {string} [instanceMetadata.createdBy] Email address of the user
   * who created this record.
   * @property {date} [instanceMetadata.createdUtc] Time this object was
   * initially created.
   * @property {uuid} [instanceMetadata.instanceId] Customer Insights instance
   * id associated with this object.
   * @property {object} [byosaResourceMetadata]
   * @property {string} [byosaResourceMetadata.kind] Possible values include:
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'firstPartyADConnection', 'adlsGen2', 'd365Sales', 'd365Marketing',
   * 'attachCds', 'ftp', 'facebookAds', 'activeCampaign', 'autopilot',
   * 'amlWorkspace', 'mlStudioWebservice', 'adRoll', 'rollWorks',
   * 'constantContact', 'campaignMonitor', 'http', 'dotDigital', 'mailchimp',
   * 'linkedIn', 'googleAds', 'marketo', 'microsoftAds', 'omnisend',
   * 'sendGrid', 'sendinblue', 'snapchat', 'powerBI', 'azureSql', 'synapse'
   * @property {uuid} [byosaResourceMetadata.resourceId] Gets the Id of the
   * resource.
   * @property {uuid} [byosaResourceMetadata.operationId] Gets the Id of the
   * operation being performed on the resource.
   * @property {string} [byosaResourceMetadata.name] Gets the Name of the
   * resource.
   * @property {string} [byosaResourceMetadata.description] Gets the
   * Description of the resource.
   * @property {number} [byosaResourceMetadata.version] Version number of this
   * object.
   * @property {string} [byosaResourceMetadata.updatedBy] UPN of the user who
   * last updated this record.
   * @property {date} [byosaResourceMetadata.updatedUtc] Time this object was
   * last updated.
   * @property {string} [byosaResourceMetadata.createdBy] Email address of the
   * user who created this record.
   * @property {date} [byosaResourceMetadata.createdUtc] Time this object was
   * initially created.
   * @property {uuid} [byosaResourceMetadata.instanceId] Customer Insights
   * instance id associated with this object.
   * @property {object} [cdsResourceMetadata]
   * @property {string} [cdsResourceMetadata.kind] Possible values include:
   * 'bearerAuthenticationConnection', 'sshKeyAuthenticationConnection',
   * 'apiKeyAuthenticationConnection', 'basicAuthenticationConnection',
   * 'firstPartyADConnection', 'adlsGen2', 'd365Sales', 'd365Marketing',
   * 'attachCds', 'ftp', 'facebookAds', 'activeCampaign', 'autopilot',
   * 'amlWorkspace', 'mlStudioWebservice', 'adRoll', 'rollWorks',
   * 'constantContact', 'campaignMonitor', 'http', 'dotDigital', 'mailchimp',
   * 'linkedIn', 'googleAds', 'marketo', 'microsoftAds', 'omnisend',
   * 'sendGrid', 'sendinblue', 'snapchat', 'powerBI', 'azureSql', 'synapse'
   * @property {uuid} [cdsResourceMetadata.resourceId] Gets the Id of the
   * resource.
   * @property {uuid} [cdsResourceMetadata.operationId] Gets the Id of the
   * operation being performed on the resource.
   * @property {string} [cdsResourceMetadata.name] Gets the Name of the
   * resource.
   * @property {string} [cdsResourceMetadata.description] Gets the Description
   * of the resource.
   * @property {number} [cdsResourceMetadata.version] Version number of this
   * object.
   * @property {string} [cdsResourceMetadata.updatedBy] UPN of the user who
   * last updated this record.
   * @property {date} [cdsResourceMetadata.updatedUtc] Time this object was
   * last updated.
   * @property {string} [cdsResourceMetadata.createdBy] Email address of the
   * user who created this record.
   * @property {date} [cdsResourceMetadata.createdUtc] Time this object was
   * initially created.
   * @property {uuid} [cdsResourceMetadata.instanceId] Customer Insights
   * instance id associated with this object.
   * @property {object} [byoPbiProvisioningInfo]
   * @property {string} [byoPbiProvisioningInfo.storageSubscriptionId] Storage
   * account subscriptionId.
   * @property {string} [byoPbiProvisioningInfo.storageResourceGroup] Storage
   * account Resource Group.
   * @property {string} [byoPbiProvisioningInfo.storageResourceRegion] Storage
   * account Region.
   * @property {string} [byoPbiProvisioningInfo.storageResourceTenantId]
   * Storage account tenant.
   * @property {string} [byoPbiProvisioningInfo.capacityId] Pbi Capacity Id.
   * @property {string} [byoPbiProvisioningInfo.delegationToken] PBI delegation
   * token captured from the user.
   * @property {boolean} [isCdsMdlStorageEnabled]
   * @property {boolean} [isCiToByosaMigrationEnabled]
   * @property {string} [bapProvisioningType] Possible values include: 'skip',
   * 'create', 'attach'
   * @property {boolean} [isPbiProvisioningRequired]
   */
  constructor() {
  }

  /**
   * Defines the metadata of InstanceCreationRequest
   *
   * @returns {object} metadata of InstanceCreationRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InstanceCreationRequest',
      type: {
        name: 'Composite',
        className: 'InstanceCreationRequest',
        modelProperties: {
          instanceMetadata: {
            required: false,
            serializedName: 'instanceMetadata',
            type: {
              name: 'Composite',
              className: 'InstanceMetadata'
            }
          },
          byosaResourceMetadata: {
            required: false,
            serializedName: 'byosaResourceMetadata',
            type: {
              name: 'Composite',
              className: 'ResourceMetadata'
            }
          },
          cdsResourceMetadata: {
            required: false,
            serializedName: 'cdsResourceMetadata',
            type: {
              name: 'Composite',
              className: 'ResourceMetadata'
            }
          },
          byoPbiProvisioningInfo: {
            required: false,
            serializedName: 'byoPbiProvisioningInfo',
            type: {
              name: 'Composite',
              className: 'ByoPbiProvisioningInfo'
            }
          },
          isCdsMdlStorageEnabled: {
            required: false,
            serializedName: 'isCdsMdlStorageEnabled',
            type: {
              name: 'Boolean'
            }
          },
          isCiToByosaMigrationEnabled: {
            required: false,
            serializedName: 'isCiToByosaMigrationEnabled',
            type: {
              name: 'Boolean'
            }
          },
          bapProvisioningType: {
            required: false,
            serializedName: 'bapProvisioningType',
            type: {
              name: 'String'
            }
          },
          isPbiProvisioningRequired: {
            required: false,
            serializedName: 'isPbiProvisioningRequired',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = InstanceCreationRequest;
