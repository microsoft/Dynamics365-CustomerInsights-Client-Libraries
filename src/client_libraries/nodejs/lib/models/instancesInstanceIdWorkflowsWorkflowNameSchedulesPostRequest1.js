/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a DAG refresh schedule
 *
 * @extends models['WorkflowRefreshSchedule']
 */
class InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1 extends models['WorkflowRefreshSchedule'] {
  /**
   * Create a InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1
   *
   * @returns {object} metadata of InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Instances-instanceId-Workflows-workflowName-SchedulesPostRequest-1',
      type: {
        name: 'Composite',
        className: 'InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1',
        modelProperties: {
          operationType: {
            required: false,
            serializedName: 'operationType',
            type: {
              name: 'String'
            }
          },
          subType: {
            required: false,
            serializedName: 'subType',
            type: {
              name: 'String'
            }
          },
          identifiers: {
            required: false,
            serializedName: 'identifiers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          jobType: {
            required: false,
            serializedName: 'jobType',
            type: {
              name: 'String'
            }
          },
          isActive: {
            required: false,
            serializedName: 'isActive',
            type: {
              name: 'Boolean'
            }
          },
          timezoneId: {
            required: false,
            serializedName: 'timezoneId',
            type: {
              name: 'String'
            }
          },
          cronSchedules: {
            required: false,
            serializedName: 'cronSchedules',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          scheduleId: {
            required: false,
            serializedName: 'scheduleId',
            type: {
              name: 'String'
            }
          },
          instanceId: {
            required: false,
            serializedName: 'instanceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = InstancesInstanceIdWorkflowsWorkflowNameSchedulesPostRequest1;
