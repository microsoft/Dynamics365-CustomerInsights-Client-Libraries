/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents a variable (computed column) in a measure
 *
 */
class MeasureVariable {
  /**
   * Create a MeasureVariable.
   * @property {string} [kind] Possible values include: 'arithmetic', 'date'
   * @property {string} [name] Gets the name of the variable
   * @property {string} [dataType] Gets the data type of the variable
   * @property {string} [expressionText] Gets the expression text for computing
   * the variable
   * @property {array} [variableConditionGroups] Gets the variable conditions
   */
  constructor() {
  }

  /**
   * Defines the metadata of MeasureVariable
   *
   * @returns {object} metadata of MeasureVariable
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MeasureVariable',
      type: {
        name: 'Composite',
        className: 'MeasureVariable',
        modelProperties: {
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          dataType: {
            required: false,
            serializedName: 'dataType',
            type: {
              name: 'String'
            }
          },
          expressionText: {
            required: false,
            serializedName: 'expressionText',
            type: {
              name: 'String'
            }
          },
          variableConditionGroups: {
            required: false,
            serializedName: 'variableConditionGroups',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MeasureVariableConditionGroupElementType',
                  type: {
                    name: 'Composite',
                    className: 'MeasureVariableConditionGroup'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MeasureVariable;
