/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents the semantic info used in API requests (attribute level)
 *
 */
class AttributeSemanticInformation {
  /**
   * Create a AttributeSemanticInformation.
   * @property {string} [attributeName] Name of the attribute.
   * @property {string} [label] Semantic label. Possible values include:
   * 'CalendarDate', 'CalendarDayOfMonth', 'CalendarDayOfWeek',
   * 'CalendarDayOfYear', 'CalendarHalfYear', 'CalendarMonthOfYear',
   * 'CalendarMonth', 'CalendarWeek', 'CalendarYear', 'CalendarFiscalDate',
   * 'CalendarFiscalDayOfMonth', 'CalendarFiscalDayOfWeek',
   * 'CalendarFiscalDayOfYear', 'CalendarFiscalHalfYear',
   * 'CalendarFiscalMonthOfYear', 'CalendarFiscalMonth',
   * 'CalendarFiscalQuarter', 'CalendarFiscalWeekOfMonth',
   * 'CalendarFiscalWeekOfYear', 'CalendarFiscalWeek', 'CalendarFiscalYear',
   * 'Account', 'Channel', 'Contact', 'Customer', 'Language', 'Organization',
   * 'OrganizationUnit', 'Person', 'Product', 'ProductGroup',
   * 'LocationAddress', 'LocationAddressStreet', 'LocationCity',
   * 'LocationContinent', 'LocationCountry', 'LocationCounty',
   * 'LocationLatitude', 'LocationLongitude', 'LocationPoint',
   * 'LocationPostalCode', 'LocationProvince', 'LocationRegion',
   * 'LocationState', 'LocationTimezone', 'MeasurementDateCreation',
   * 'MeasurementDateModify', 'MeasurementStatus', 'MeasurementVersion',
   * 'BarCode', 'Brand', 'IdentityGovernmentID', 'PersonFirstName',
   * 'PersonFullName', 'PersonLastName', 'PersonMiddleName',
   * 'IdentityServiceEmail', 'IdentityServiceFacebook', 'IdentityServicePhone',
   * 'IdentityServiceTwitter', 'Image', 'Place', 'ReferenceDescription',
   * 'ReferenceImageURL', 'ReferencePhonetic', 'ReferenceURL'
   */
  constructor() {
  }

  /**
   * Defines the metadata of AttributeSemanticInformation
   *
   * @returns {object} metadata of AttributeSemanticInformation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AttributeSemanticInformation',
      type: {
        name: 'Composite',
        className: 'AttributeSemanticInformation',
        modelProperties: {
          attributeName: {
            required: false,
            serializedName: 'attributeName',
            type: {
              name: 'String'
            }
          },
          label: {
            required: false,
            serializedName: 'label',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AttributeSemanticInformation;
