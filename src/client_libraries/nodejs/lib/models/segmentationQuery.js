/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represent a Segment Query.
 *
 */
class SegmentationQuery {
  /**
   * Create a SegmentationQuery.
   * @property {string} [type] Possible values include: 'structured', 'manual'
   * @property {array} [projections] Gets list of attributes to be projected in
   * segment. (DEPRECATED)
   * @property {array} [projectedAttributes] Gets list of attributes to be
   * projected in segment.
   * @property {array} [rowsets] Gets list of rowsets of segment.
   * @property {string} [segmentationQuerySql] Gets the user specified custom
   * SQL query.
   * @property {array} [hierarchies] Gets a list of Hierarchies for segment
   * query.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SegmentationQuery
   *
   * @returns {object} metadata of SegmentationQuery
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SegmentationQuery',
      type: {
        name: 'Composite',
        className: 'SegmentationQuery',
        modelProperties: {
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          projections: {
            required: false,
            serializedName: 'projections',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          projectedAttributes: {
            required: false,
            serializedName: 'projectedAttributes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SegmentationProjectionElementType',
                  type: {
                    name: 'Composite',
                    className: 'SegmentationProjection'
                  }
              }
            }
          },
          rowsets: {
            required: false,
            serializedName: 'rowsets',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SegmentationRowsetElementType',
                  type: {
                    name: 'Composite',
                    className: 'SegmentationRowset'
                  }
              }
            }
          },
          segmentationQuerySql: {
            required: false,
            serializedName: 'segmentationQuerySql',
            type: {
              name: 'String'
            }
          },
          hierarchies: {
            required: false,
            serializedName: 'hierarchies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HierarchyDefinitionElementType',
                  type: {
                    name: 'Composite',
                    className: 'HierarchyDefinition'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SegmentationQuery;
