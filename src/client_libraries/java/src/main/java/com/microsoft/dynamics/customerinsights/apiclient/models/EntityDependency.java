/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import java.util.List;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a reference to an entity.
 */
public class EntityDependency {
    /**
     * Gets the qualified entity name.
     */
    @JsonProperty(value = "qualifiedEntityName")
    private String qualifiedEntityName;

    /**
     * Possible values include: 'unspecified', 'profile', 'conflationMap',
     * 'activity', 'aggregateKpi', 'profileKpi', 'unifiedActivity', 'segment',
     * 'intelligence', 'genericPrediction', 'enrichment', 'insights',
     * 'derivedEntity', 'corrupt', 'selfConflation', 'conflationManualReview',
     * 'selfConflationManualReview', 'semanticActivity', 'segmentMembership'.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Gets the list of attributes included in the dependency.
     */
    @JsonProperty(value = "attributeNames")
    private List<String> attributeNames;

    /**
     * Gets the list of relationships included in the dependency.
     */
    @JsonProperty(value = "relationshipNames")
    private List<String> relationshipNames;

    /**
     * Contains the Activity type and entity name corresponding to that
     * activity type.
     */
    @JsonProperty(value = "activityDetails")
    private List<InsightActivityDetails> activityDetails;

    /**
     * Get gets the qualified entity name.
     *
     * @return the qualifiedEntityName value
     */
    public String qualifiedEntityName() {
        return this.qualifiedEntityName;
    }

    /**
     * Set gets the qualified entity name.
     *
     * @param qualifiedEntityName the qualifiedEntityName value to set
     * @return the EntityDependency object itself.
     */
    public EntityDependency withQualifiedEntityName(String qualifiedEntityName) {
        this.qualifiedEntityName = qualifiedEntityName;
        return this;
    }

    /**
     * Get possible values include: 'unspecified', 'profile', 'conflationMap', 'activity', 'aggregateKpi', 'profileKpi', 'unifiedActivity', 'segment', 'intelligence', 'genericPrediction', 'enrichment', 'insights', 'derivedEntity', 'corrupt', 'selfConflation', 'conflationManualReview', 'selfConflationManualReview', 'semanticActivity', 'segmentMembership'.
     *
     * @return the type value
     */
    public String type() {
        return this.type;
    }

    /**
     * Set possible values include: 'unspecified', 'profile', 'conflationMap', 'activity', 'aggregateKpi', 'profileKpi', 'unifiedActivity', 'segment', 'intelligence', 'genericPrediction', 'enrichment', 'insights', 'derivedEntity', 'corrupt', 'selfConflation', 'conflationManualReview', 'selfConflationManualReview', 'semanticActivity', 'segmentMembership'.
     *
     * @param type the type value to set
     * @return the EntityDependency object itself.
     */
    public EntityDependency withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get gets the list of attributes included in the dependency.
     *
     * @return the attributeNames value
     */
    public List<String> attributeNames() {
        return this.attributeNames;
    }

    /**
     * Set gets the list of attributes included in the dependency.
     *
     * @param attributeNames the attributeNames value to set
     * @return the EntityDependency object itself.
     */
    public EntityDependency withAttributeNames(List<String> attributeNames) {
        this.attributeNames = attributeNames;
        return this;
    }

    /**
     * Get gets the list of relationships included in the dependency.
     *
     * @return the relationshipNames value
     */
    public List<String> relationshipNames() {
        return this.relationshipNames;
    }

    /**
     * Set gets the list of relationships included in the dependency.
     *
     * @param relationshipNames the relationshipNames value to set
     * @return the EntityDependency object itself.
     */
    public EntityDependency withRelationshipNames(List<String> relationshipNames) {
        this.relationshipNames = relationshipNames;
        return this;
    }

    /**
     * Get contains the Activity type and entity name corresponding to that activity type.
     *
     * @return the activityDetails value
     */
    public List<InsightActivityDetails> activityDetails() {
        return this.activityDetails;
    }

    /**
     * Set contains the Activity type and entity name corresponding to that activity type.
     *
     * @param activityDetails the activityDetails value to set
     * @return the EntityDependency object itself.
     */
    public EntityDependency withActivityDetails(List<InsightActivityDetails> activityDetails) {
        this.activityDetails = activityDetails;
        return this;
    }

}
