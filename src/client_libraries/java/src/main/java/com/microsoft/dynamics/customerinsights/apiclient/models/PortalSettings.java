/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a mapping  that can store all user ids associated with the email.
 */
public class PortalSettings {
    /**
     * The coachmarks property.
     */
    @JsonProperty(value = "coachmarks")
    private Coachmarks coachmarks;

    /**
     * The banners property.
     */
    @JsonProperty(value = "banners")
    private Banners banners;

    /**
     * The notifications property.
     */
    @JsonProperty(value = "notifications")
    private Notifications notifications;

    /**
     * Gets a value indicating whether the user has seen the all apps (welcome)
     * page.
     */
    @JsonProperty(value = "isExistingUser")
    private Boolean isExistingUser;

    /**
     * Gets a value indicating whether the user has seen the all apps (welcome)
     * page.
     */
    @JsonProperty(value = "showDefaultHomePage")
    private Boolean showDefaultHomePage;

    /**
     * Gets a value indicating whether the user has seen the all apps (welcome)
     * page.
     */
    @JsonProperty(value = "proTagger")
    private Boolean proTagger;

    /**
     * Get the coachmarks value.
     *
     * @return the coachmarks value
     */
    public Coachmarks coachmarks() {
        return this.coachmarks;
    }

    /**
     * Set the coachmarks value.
     *
     * @param coachmarks the coachmarks value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withCoachmarks(Coachmarks coachmarks) {
        this.coachmarks = coachmarks;
        return this;
    }

    /**
     * Get the banners value.
     *
     * @return the banners value
     */
    public Banners banners() {
        return this.banners;
    }

    /**
     * Set the banners value.
     *
     * @param banners the banners value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withBanners(Banners banners) {
        this.banners = banners;
        return this;
    }

    /**
     * Get the notifications value.
     *
     * @return the notifications value
     */
    public Notifications notifications() {
        return this.notifications;
    }

    /**
     * Set the notifications value.
     *
     * @param notifications the notifications value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withNotifications(Notifications notifications) {
        this.notifications = notifications;
        return this;
    }

    /**
     * Get gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @return the isExistingUser value
     */
    public Boolean isExistingUser() {
        return this.isExistingUser;
    }

    /**
     * Set gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @param isExistingUser the isExistingUser value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withIsExistingUser(Boolean isExistingUser) {
        this.isExistingUser = isExistingUser;
        return this;
    }

    /**
     * Get gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @return the showDefaultHomePage value
     */
    public Boolean showDefaultHomePage() {
        return this.showDefaultHomePage;
    }

    /**
     * Set gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @param showDefaultHomePage the showDefaultHomePage value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withShowDefaultHomePage(Boolean showDefaultHomePage) {
        this.showDefaultHomePage = showDefaultHomePage;
        return this;
    }

    /**
     * Get gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @return the proTagger value
     */
    public Boolean proTagger() {
        return this.proTagger;
    }

    /**
     * Set gets a value indicating whether the user has seen the all apps (welcome) page.
     *
     * @param proTagger the proTagger value to set
     * @return the PortalSettings object itself.
     */
    public PortalSettings withProTagger(Boolean proTagger) {
        this.proTagger = proTagger;
        return this;
    }

}
