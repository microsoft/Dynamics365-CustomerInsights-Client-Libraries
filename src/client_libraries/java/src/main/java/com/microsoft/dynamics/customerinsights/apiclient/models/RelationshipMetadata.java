/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.microsoft.dynamics.customerinsights.apiclient.models;

import org.joda.time.DateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents a Relationship.
 */
public class RelationshipMetadata {
    /**
     * Gets the friendly name of the relationship.
     */
    @JsonProperty(value = "friendlyName")
    private String friendlyName;

    /**
     * Gets the unique name for relationship.
     */
    @JsonProperty(value = "name")
    private String name;

    /**
     * Gets the description for relationship.
     */
    @JsonProperty(value = "description")
    private String description;

    /**
     * Possible values include: 'singleKeyRelationshipOrigin',
     * 'singleKeyRelationshipDestination', 'dataSourceLineageOrigin',
     * 'dataSourceLineageDestination'.
     */
    @JsonProperty(value = "relationshipType")
    private String relationshipType;

    /**
     * Gets the name of the foreign key reference attribute that this
     * relationship originates from.
     */
    @JsonProperty(value = "fromAttributeName")
    private String fromAttributeName;

    /**
     * Gets the name of the entity this relationship originates from.
     */
    @JsonProperty(value = "fromEntityName")
    private String fromEntityName;

    /**
     * Gets the name of the foreign key attribute that this relationship points
     * to.
     */
    @JsonProperty(value = "toAttributeName")
    private String toAttributeName;

    /**
     * Gets the name of the entity this relationship points to.
     */
    @JsonProperty(value = "toEntityName")
    private String toEntityName;

    /**
     * Possible values include: 'oneToMany', 'oneToOne'.
     */
    @JsonProperty(value = "cardinality")
    private String cardinality;

    /**
     * Version number of this object.
     */
    @JsonProperty(value = "version")
    private Long version;

    /**
     * UPN of the user who last updated this record.
     */
    @JsonProperty(value = "updatedBy")
    private String updatedBy;

    /**
     * Time this object was last updated.
     */
    @JsonProperty(value = "updatedUtc")
    private DateTime updatedUtc;

    /**
     * Email address of the user who created this record.
     */
    @JsonProperty(value = "createdBy")
    private String createdBy;

    /**
     * Time this object was initially created.
     */
    @JsonProperty(value = "createdUtc")
    private DateTime createdUtc;

    /**
     * Customer Insights instance id associated with this object.
     */
    @JsonProperty(value = "instanceId")
    private UUID instanceId;

    /**
     * Get gets the friendly name of the relationship.
     *
     * @return the friendlyName value
     */
    public String friendlyName() {
        return this.friendlyName;
    }

    /**
     * Set gets the friendly name of the relationship.
     *
     * @param friendlyName the friendlyName value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }

    /**
     * Get gets the unique name for relationship.
     *
     * @return the name value
     */
    public String name() {
        return this.name;
    }

    /**
     * Set gets the unique name for relationship.
     *
     * @param name the name value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get gets the description for relationship.
     *
     * @return the description value
     */
    public String description() {
        return this.description;
    }

    /**
     * Set gets the description for relationship.
     *
     * @param description the description value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get possible values include: 'singleKeyRelationshipOrigin', 'singleKeyRelationshipDestination', 'dataSourceLineageOrigin', 'dataSourceLineageDestination'.
     *
     * @return the relationshipType value
     */
    public String relationshipType() {
        return this.relationshipType;
    }

    /**
     * Set possible values include: 'singleKeyRelationshipOrigin', 'singleKeyRelationshipDestination', 'dataSourceLineageOrigin', 'dataSourceLineageDestination'.
     *
     * @param relationshipType the relationshipType value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withRelationshipType(String relationshipType) {
        this.relationshipType = relationshipType;
        return this;
    }

    /**
     * Get gets the name of the foreign key reference attribute that this relationship originates from.
     *
     * @return the fromAttributeName value
     */
    public String fromAttributeName() {
        return this.fromAttributeName;
    }

    /**
     * Set gets the name of the foreign key reference attribute that this relationship originates from.
     *
     * @param fromAttributeName the fromAttributeName value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withFromAttributeName(String fromAttributeName) {
        this.fromAttributeName = fromAttributeName;
        return this;
    }

    /**
     * Get gets the name of the entity this relationship originates from.
     *
     * @return the fromEntityName value
     */
    public String fromEntityName() {
        return this.fromEntityName;
    }

    /**
     * Set gets the name of the entity this relationship originates from.
     *
     * @param fromEntityName the fromEntityName value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withFromEntityName(String fromEntityName) {
        this.fromEntityName = fromEntityName;
        return this;
    }

    /**
     * Get gets the name of the foreign key attribute that this relationship points to.
     *
     * @return the toAttributeName value
     */
    public String toAttributeName() {
        return this.toAttributeName;
    }

    /**
     * Set gets the name of the foreign key attribute that this relationship points to.
     *
     * @param toAttributeName the toAttributeName value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withToAttributeName(String toAttributeName) {
        this.toAttributeName = toAttributeName;
        return this;
    }

    /**
     * Get gets the name of the entity this relationship points to.
     *
     * @return the toEntityName value
     */
    public String toEntityName() {
        return this.toEntityName;
    }

    /**
     * Set gets the name of the entity this relationship points to.
     *
     * @param toEntityName the toEntityName value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withToEntityName(String toEntityName) {
        this.toEntityName = toEntityName;
        return this;
    }

    /**
     * Get possible values include: 'oneToMany', 'oneToOne'.
     *
     * @return the cardinality value
     */
    public String cardinality() {
        return this.cardinality;
    }

    /**
     * Set possible values include: 'oneToMany', 'oneToOne'.
     *
     * @param cardinality the cardinality value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withCardinality(String cardinality) {
        this.cardinality = cardinality;
        return this;
    }

    /**
     * Get version number of this object.
     *
     * @return the version value
     */
    public Long version() {
        return this.version;
    }

    /**
     * Set version number of this object.
     *
     * @param version the version value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withVersion(Long version) {
        this.version = version;
        return this;
    }

    /**
     * Get uPN of the user who last updated this record.
     *
     * @return the updatedBy value
     */
    public String updatedBy() {
        return this.updatedBy;
    }

    /**
     * Set uPN of the user who last updated this record.
     *
     * @param updatedBy the updatedBy value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    /**
     * Get time this object was last updated.
     *
     * @return the updatedUtc value
     */
    public DateTime updatedUtc() {
        return this.updatedUtc;
    }

    /**
     * Set time this object was last updated.
     *
     * @param updatedUtc the updatedUtc value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withUpdatedUtc(DateTime updatedUtc) {
        this.updatedUtc = updatedUtc;
        return this;
    }

    /**
     * Get email address of the user who created this record.
     *
     * @return the createdBy value
     */
    public String createdBy() {
        return this.createdBy;
    }

    /**
     * Set email address of the user who created this record.
     *
     * @param createdBy the createdBy value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get time this object was initially created.
     *
     * @return the createdUtc value
     */
    public DateTime createdUtc() {
        return this.createdUtc;
    }

    /**
     * Set time this object was initially created.
     *
     * @param createdUtc the createdUtc value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withCreatedUtc(DateTime createdUtc) {
        this.createdUtc = createdUtc;
        return this;
    }

    /**
     * Get customer Insights instance id associated with this object.
     *
     * @return the instanceId value
     */
    public UUID instanceId() {
        return this.instanceId;
    }

    /**
     * Set customer Insights instance id associated with this object.
     *
     * @param instanceId the instanceId value to set
     * @return the RelationshipMetadata object itself.
     */
    public RelationshipMetadata withInstanceId(UUID instanceId) {
        this.instanceId = instanceId;
        return this;
    }

}
