# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class MappedSecretMetadata(Model):
    """Represents mapping between enity fields and Linked Metadata.

    :param mapped_field_id: The identifier for field mapping to a keyVault
    :type mapped_field_id: str
    :param linked_key_vault_metadata_id: Gets uniqueId of the KeyVault
    :type linked_key_vault_metadata_id: str
    :param mapping_entity_id: Gets uniqueId of entity Mapping Secrets
    :type mapping_entity_id: str
    :param byo_key_vault_field_mapping: Gets Secret Names for Fields Mapped in
     KeyVault
    :type byo_key_vault_field_mapping: dict[str, str]
    :param instance_id: Customer Insights instance id associated with this
     object.
    :type instance_id: str
    """

    _attribute_map = {
        'mapped_field_id': {'key': 'mappedFieldId', 'type': 'str'},
        'linked_key_vault_metadata_id': {'key': 'linkedKeyVaultMetadataId', 'type': 'str'},
        'mapping_entity_id': {'key': 'mappingEntityId', 'type': 'str'},
        'byo_key_vault_field_mapping': {'key': 'byoKeyVaultFieldMapping', 'type': '{str}'},
        'instance_id': {'key': 'instanceId', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(MappedSecretMetadata, self).__init__(**kwargs)
        self.mapped_field_id = kwargs.get('mapped_field_id', None)
        self.linked_key_vault_metadata_id = kwargs.get('linked_key_vault_metadata_id', None)
        self.mapping_entity_id = kwargs.get('mapping_entity_id', None)
        self.byo_key_vault_field_mapping = kwargs.get('byo_key_vault_field_mapping', None)
        self.instance_id = kwargs.get('instance_id', None)
