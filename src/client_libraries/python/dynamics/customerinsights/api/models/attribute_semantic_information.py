# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AttributeSemanticInformation(Model):
    """Represents the semantic info used in API requests (attribute level).

    :param attribute_name: Name of the attribute.
    :type attribute_name: str
    :param label: Semantic label. Possible values include: 'CalendarDate',
     'CalendarDayOfMonth', 'CalendarDayOfWeek', 'CalendarDayOfYear',
     'CalendarHalfYear', 'CalendarMonthOfYear', 'CalendarMonth',
     'CalendarWeek', 'CalendarYear', 'CalendarFiscalDate',
     'CalendarFiscalDayOfMonth', 'CalendarFiscalDayOfWeek',
     'CalendarFiscalDayOfYear', 'CalendarFiscalHalfYear',
     'CalendarFiscalMonthOfYear', 'CalendarFiscalMonth',
     'CalendarFiscalQuarter', 'CalendarFiscalWeekOfMonth',
     'CalendarFiscalWeekOfYear', 'CalendarFiscalWeek', 'CalendarFiscalYear',
     'Account', 'Channel', 'Contact', 'Customer', 'Language', 'Organization',
     'OrganizationUnit', 'Person', 'Product', 'ProductGroup',
     'LocationAddress', 'LocationAddressStreet', 'LocationCity',
     'LocationContinent', 'LocationCountry', 'LocationCounty',
     'LocationLatitude', 'LocationLongitude', 'LocationPoint',
     'LocationPostalCode', 'LocationProvince', 'LocationRegion',
     'LocationState', 'LocationTimezone', 'MeasurementDateCreation',
     'MeasurementDateModify', 'MeasurementStatus', 'MeasurementVersion',
     'BarCode', 'Brand', 'IdentityGovernmentID', 'PersonFirstName',
     'PersonFullName', 'PersonLastName', 'PersonMiddleName',
     'IdentityServiceEmail', 'IdentityServiceFacebook', 'IdentityServicePhone',
     'IdentityServiceTwitter', 'Image', 'Place', 'ReferenceDescription',
     'ReferenceImageURL', 'ReferencePhonetic', 'ReferenceURL'
    :type label: str or ~dynamics.customerinsights.api.models.enum
    """

    _attribute_map = {
        'attribute_name': {'key': 'attributeName', 'type': 'str'},
        'label': {'key': 'label', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(AttributeSemanticInformation, self).__init__(**kwargs)
        self.attribute_name = kwargs.get('attribute_name', None)
        self.label = kwargs.get('label', None)
